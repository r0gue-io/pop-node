name: Build, test and lint

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup worker
        uses: "./.github/templates/setup-worker"
        with:
          rust-components: rustfmt

      - name: Check formatting
        run: cargo +stable fmt --all -- --check

  check:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup worker
        uses: "./.github/templates/setup-worker"

      - name: Cache Build artefacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-release

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.0
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Check Build
        run: |
          cargo check --release --locked --features=runtime-benchmarks

  clippy:
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      checks: write
    env:
      SKIP_WASM_BUILD: 1
    steps:
      - name: Free up space on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v3

      - name: Setup worker
        uses: "./.github/templates/setup-worker"

      - name: Cache Build artefacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-clippy

      - name: Annotate with Clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --release --locked --features=runtime-benchmarks

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      # Tests with benchmarks require a lot of disk space
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: false

      - uses: actions/checkout@v3

      - name: Setup worker
        uses: "./.github/templates/setup-worker"

      - name: Cache Build artefacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-debug

      - name: Run tests
        run: cargo test --release --locked --verbose --all

      - name: Check try-runtime build
        run: cargo check --release --features=try-runtime
