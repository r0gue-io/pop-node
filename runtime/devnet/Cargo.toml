[package]
authors.workspace = true
description.workspace = true
edition.workspace = true
homepage.workspace = true
license = "Unlicense"
name = "pop-runtime-devnet"
repository.workspace = true
version = "0.1.0"

[package.metadata.docs.rs]
targets = [ "x86_64-unknown-linux-gnu" ]

[build-dependencies]
substrate-wasm-builder.workspace = true

[dependencies]
codec.workspace = true
hex-literal.workspace = true
log.workspace = true
scale-info.workspace = true
smallvec.workspace = true

# Local
pop-primitives.workspace = true
pop-runtime-common = { workspace = true, default-features = false }

# Substrate
frame-benchmarking.workspace = true
frame-executive.workspace = true
frame-metadata-hash-extension.workspace = true
frame-support.workspace = true
frame-system.workspace = true
frame-system-benchmarking.workspace = true
frame-system-rpc-runtime-api.workspace = true
frame-try-runtime.workspace = true
pallet-assets.workspace = true
pallet-aura.workspace = true
pallet-authorship.workspace = true
pallet-balances.workspace = true
pallet-contracts.workspace = true
pallet-message-queue.workspace = true
pallet-multisig.workspace = true
pallet-nft-fractionalization.workspace = true
pallet-nfts.workspace = true
pallet-nfts-runtime-api.workspace = true
pallet-preimage.workspace = true
pallet-proxy.workspace = true
pallet-scheduler.workspace = true
pallet-session.workspace = true
pallet-sudo.workspace = true
pallet-timestamp.workspace = true
pallet-transaction-payment.workspace = true
pallet-transaction-payment-rpc-runtime-api.workspace = true
pallet-utility.workspace = true
sp-api.workspace = true
sp-block-builder.workspace = true
sp-consensus-aura.workspace = true
sp-core.workspace = true
sp-genesis-builder.workspace = true
sp-inherents.workspace = true
sp-io.workspace = true
sp-mmr-primitives.workspace = true
sp-offchain.workspace = true
sp-runtime.workspace = true
sp-session.workspace = true
sp-std.workspace = true
sp-transaction-pool.workspace = true
sp-version.workspace = true

# Polkadot
pallet-xcm.workspace = true
polkadot-parachain-primitives.workspace = true
polkadot-runtime-common.workspace = true
xcm.workspace = true
xcm-builder.workspace = true
xcm-executor.workspace = true

# Cumulus
cumulus-pallet-aura-ext.workspace = true
cumulus-pallet-parachain-system.workspace = true
cumulus-pallet-session-benchmarking.workspace = true
cumulus-pallet-xcm.workspace = true
cumulus-pallet-xcmp-queue.workspace = true
cumulus-primitives-aura.workspace = true
cumulus-primitives-core.workspace = true
cumulus-primitives-storage-weight-reclaim.workspace = true
cumulus-primitives-utility.workspace = true
pallet-collator-selection.workspace = true
parachain-info.workspace = true
parachains-common.workspace = true

# ISMP
ismp.workspace = true
ismp-parachain.workspace = true
ismp-parachain-runtime-api.workspace = true
pallet-ismp = { workspace = true, features = [ "unsigned" ] }
pallet-ismp-demo.workspace = true
pallet-ismp-runtime-api.workspace = true

[dev-dependencies]
enumflags2 = "0.7.9"
env_logger = "0.11.2"
hex = "0.4.3"

[features]
default = [ "std" ]
std = [
	"codec/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-storage-weight-reclaim/std",
	"cumulus-primitives-utility/std",
	"frame-benchmarking/std",
	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-benchmarking/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime/std",
	"ismp-parachain-runtime-api/std",
	"ismp-parachain/std",
	"ismp/std",
	"log/std",
	"pallet-assets/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-collator-selection/std",
	"pallet-contracts/std",
	"pallet-ismp-runtime-api/std",
	"pallet-ismp/std",
	"pallet-message-queue/std",
	"pallet-multisig/std",
	"pallet-nft-fractionalization/std",
	"pallet-nfts-runtime-api/std",
	"pallet-nfts/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-scheduler/std",
	"pallet-session/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-utility/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"parachains-common/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"pop-primitives/std",
	"pop-runtime-common/std",
	"scale-info/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm/std",
]

runtime-benchmarks = [
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-nft-fractionalization/runtime-benchmarks",
	"pallet-nfts/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"pop-runtime-common/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
]

try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"ismp-parachain/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-ismp/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nft-fractionalization/try-runtime",
	"pallet-nfts/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-session/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"sp-runtime/try-runtime",
]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = [ "substrate-wasm-builder/metadata-hash" ]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
on-chain-release-build = [ "metadata-hash" ]
